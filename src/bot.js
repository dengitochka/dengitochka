import { Telegraf, session } from 'telegraf'
import { getInlineKeyboard } from './services/bot/_helper.js'
import { SCENARIOS, PROVIDER_TOKEN_PAYMENTS } from './global/config.js'
import config from './global/config.js'
import TG from './models/TG.js'
import { SetDefaultPrice, ProductPrice} from './models/price.js'
import { getPasswordHash } from './models/_helper.js'
import UserCredentials from './models/userCredentials.js'
import { getInvoice } from './invoice.js'
import { InitializeAdminCredentialsAsync, UpdateAdminPassword } from './models/userCredentials.js'

const { BOT_TOKEN, CHAT_ID} = config
const bot =  new Telegraf(BOT_TOKEN)

let sendPhone = ctx => {
  ctx.reply('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7(–≤–∞—à –Ω–æ–º–µ—Ä)', {
    parse_mode: 'HTML',
    reply_markup: JSON.stringify({
      keyboard: [
        [
          {text: 'üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä', request_contact: true}
        ]
      ],
      one_time_keyboard: true,
      resize_keyboard: true
    })
  })
}

bot.use(session())

bot.start(async (ctx, next) => {
  ctx.session = {scenario: null, nextCommand: null, login: null}

  /*const keyboard = [
    [{ text: 'üí∏ –Ø –ò–Ω–≤–µ—Å—Ç–æ—Ä', callback_data: COMMANDS.invest }],
    [{ text: 'üìà –Ø –ë—Ä–æ–∫–µ—Ä', callback_data: COMMANDS.broker }],
    [{ text: 'üìä –ú–Ω–µ –Ω—É–∂–µ–Ω –∫—Ä–µ–¥–∏—Ç', callback_data: COMMANDS.zalog }],
    [{ text: 'üìä –ú–Ω–µ –Ω—É–∂–Ω–∞ –∫—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è', callback_data: COMMANDS.credit }]
  ]*/

  const keyboard = [
    [{ text: '–°–∫–∞—á–∞—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é!', callback_data: SCENARIOS.getCreditHistory}],
    [{ text: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏', callback_data: SCENARIOS.updateCreditHistory}]
  ]

  ctx.reply(`–ü—Ä–∏–≤–µ—Ç! –ù–∞—à –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–∫–∞—á–∞—Ç—å —Ç–≤–æ—é –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é. –ò —ç—Ç–æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –∏ –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ –±–æ–ª—å—à–µ 5 –º–∏–Ω—É—Ç.
  –¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–∞—à–µ–π –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏, —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–µ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Ä–µ–ø—É—Ç–∞—Ü–∏–µ–π. –ë–æ–ª—å—à–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –≤ –Ω–∞—à–µ–º –±–ª–æ–≥–µ.`, getInlineKeyboard({ keyboard }))

  return await next()
})

function getAvailableAdminCommands(ctx, additionalString) {
  return ctx.sendMessage(`–ê–¥–º–∏–Ω–∫–∞ ${additionalString ?? ''}` + 
  `\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏: 
/changedPrice - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –ø–æ–ª—É—á–µ–Ω–∏—è –ö–ò
/changePassword - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –æ—Ç —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏`)
}

bot.on('message', async(ctx, next) => {
  if (ctx.message.text?.startsWith('/name')) {
    const chatId = ctx.message.chat.id
    const name = ctx.update.message.text.split(' ')[1]
    const user = await TG.find( {chatId: chatId} )
    if (user) {
      const x = await TG.findOneAndUpdate({ chatId: chatId,  first_name: name })
    }
  }
  if (ctx.message.text?.startsWith('/surname')) {
    const chatId = ctx.message.chat.id
    const surname = ctx.update.message.text.split(' ')[1]
    const user = await TG.find( {chatId: chatId} )
    if (user ) {
      const x = await TG.findOneAndUpdate({ chatId: chatId,  last_name: surname })
    }
  }

  if(ctx.message.text?.startsWith('/phone')) {
    sendPhone(ctx);
  }

  if(ctx.session?.scenario === SCENARIOS.admin 
    && ctx.session?.nextCommand === 'adminAuthorize' 
    && ctx.message.text?.startsWith('/changePrice')) {
      ctx.sendMessage('–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–π—Å–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ö–ò –≤–≤–µ–¥–∏—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ —Ä—É–±–ª—è—Ö')
  }

  if(ctx.message.text?.startsWith('/admin')) {
      ctx.session = {scenario: null, nextCommand: null, login: null}
    ctx.session.scenario = SCENARIOS.admin
    ctx.session.nextCommand = 'adminLogin'
    ctx.sendMessage('–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–π –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –æ—Ç —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏')
    ctx.sendMessage('–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω')
  } else if (ctx.session?.scenario === SCENARIOS.admin 
    && ctx.session?.nextCommand === 'adminLogin') {
      let login = ctx.message.text.trim();
      let admin = await UserCredentials.findOne({user_login: login})
      if (admin === null) {
        return ctx.sendMessage('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º –ª–æ–≥–∏–Ω–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ª–æ–≥–∏–Ω')
      }

      ctx.session.login = login
      ctx.session.nextCommand = 'adminPassword'
      ctx.sendMessage('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å')

  } else if (ctx.session?.scenario === SCENARIOS.admin
    && ctx.session?.nextCommand === 'adminPassword') {
      let adminPassword = ctx.message.text.trim();
      const { password, salt } = await UserCredentials.findOne({user_login: ctx.session.login})
      if (password !== getPasswordHash(adminPassword, salt)) {
        return ctx.sendMessage('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å');
      }

      ctx.session.nextCommand = 'adminAuthorize'
      getAvailableAdminCommands(ctx, `–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å –ø–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${ctx.session.login}.`)
  
    } else if(ctx.session?.scenario === SCENARIOS.admin 
      && ctx.session?.nextCommand === 'adminAuthorize' 
      && ctx.message.text?.startsWith('/changePassword')) {
        ctx.session.scenario = SCENARIOS.changedPassword
        ctx.sendMessage('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è —Ç–µ–∫—É—â–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏')
    }else if(ctx.session?.nextCommand === 'adminAuthorize' 
    && ctx.session.scenario === SCENARIOS.changedPassword) {
      if (UpdateAdminPassword(ctx.message.text.trim()))
        ctx.sendMessage('–ü–∞—Ä–æ–ª—å –æ—Ç —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω')
      else  
        ctx.sendMessage('–ü–∞—Ä–æ–ª—å –æ—Ç —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å –ø–æ–∑–∂–µ.')
      
      getAvailableAdminCommands(ctx)
      
      ctx.session.scenario = SCENARIOS.admin
      ctx.session.nextCommand = 'adminAuthorize'
    }
    else if (ctx.message.text?.startsWith('/changedPrice')
    && ctx.session?.nextCommand === 'adminAuthorize') {
      ctx.session.scenario = SCENARIOS.changedPrice
      ctx.sendMessage('–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–π—Å–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ö–ò –≤–≤–µ–¥–∏—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ —Ä—É–±–ª—è—Ö')
    
    } else if (ctx.session?.nextCommand === 'adminAuthorize' 
    && ctx.session.scenario === SCENARIOS.changedPrice) {
      try {
        let productName = 'creditHistory'
        let res = await ProductPrice.updateOne({ product_name: productName }, { $set: { price: Number(ctx.message.text.trim()) } })
        if (res.modifiedCount === 0) {
          console.log(`Parameters in documents ${Object.keys({ProductPrice})} didn't update. Product name - ${Object.keys({productName})}, price - ${ctx.message.text.trim()}`)
          return ctx.sendMessage('–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–π—Å–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ö–ò –≤–≤–µ–¥–∏—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ —Ä—É–±–ª—è—Ö')
        }
      }
      catch (ex) {
        console.log(ex)
      }

      ctx.session.scenario = SCENARIOS.admin
      ctx.session.nextCommand = 'adminAuthorize'

      ctx.sendMessage(`–ü—Ä–∞–π—Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π —É—Å–ª—É–≥–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω. –¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥–∏ - ${ctx.message.text.trim()} —Ä—É–±.`)
      getAvailableAdminCommands(ctx)
    }

  if (ctx.message.contact || (ctx.message.text?.startsWith('+') && parseInt(ctx.message.text?.slice(1)))) {
    const chatId = ctx.message.chat.id
    const phone = ctx.message.contact?.phone_number ??  ctx.message.text
    const user = await TG.find( {chatId: chatId} )
    if (user ) {
      const x = await TG.findOneAndUpdate({ chatId: chatId,  phone: phone })
    }

    if (ctx.session != undefined)
      ctx.session.nextCommand = 'password'
  }
  if (ctx.message.text?.startsWith('/send')) {
    const chatId = ctx.message.chat.id
    const x = await TG.find({ chatId: chatId})
    for (const user of x) {
      const { first_name, last_name, phone, type } = user
      const text = `–ò–º—è: ${first_name} \n–§–∞–º–∏–ª–∏—è: ${last_name} \n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${phone} \n–¢–∏–ø —É—Å–ª—É–≥–∏: ${type}`
      ctx.telegram.sendMessage(CHAT_ID, text)
      ctx.reply('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞')
    }
  }

  if (ctx.session?.scenario === SCENARIOS.getCreditHistory 
    && ctx.session?.nextCommand === 'password') {
    ctx.reply('–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å –æ—Ç –≥–æ—Å—É—Å–ª—É–≥')
    ctx.session.nextCommand = 'sendLoginDataToGosuslugi'

  } else if (ctx.session?.nextCommand === 'sendLoginDataToGosuslugi') {
    ctx.session.nextCommand = 'pay'
    let keyboard = []
    //Object.keys(PROVIDER_TOKEN_PAYMENTS).forEach(payment => keyboard.push([{text: PROVIDER_TOKEN_PAYMENTS[payment].name, callback_data: payment}]));

    //ctx.reply("–û–ø–ª–∞—Ç–∏—Ç–µ —É—Å–ª—É–≥—É –ø–æ–ª—É—á–µ–Ω–∏—è –ö–ò", getInlineKeyboard({keyboard}));
  }

  return await next();
})

bot.on('callback_query', onSentInvoice)
bot.on('callback_query', onNewCommand)

async function onSentInvoice(ctx, next) {
  if (ctx.session?.nextCommand === 'pay' 
    && ctx.session?.scenario === SCENARIOS.getCreditHistory) {
    let invoice = await getInvoice(ctx.from.id, PROVIDER_TOKEN_PAYMENTS[ctx.update.callback_query.data].token);

    return ctx.replyWithInvoice(invoice)
  }

  return next()
}

async function onNewCommand(ctx, next) {
  if (ctx.session === undefined)
    ctx.session = {scenario: null, nextCommand: null, login: null}
  const command = ctx.update.callback_query.data

  if (ctx.session?.nextCommand === 'offerGotCreditHistoryWay') {

    if (command === SCENARIOS.approvalOfferConditional) {
      if (ctx.session?.scenario === SCENARIOS.getCreditHistory) {
        const keyboard = [
          [{ text: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤ —á–∞—Ç–µ', callback_data: SCENARIOS.approvalOfferConditional}], 
          [{ text: '–ü–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ WebApp', web_app: {url: config.WEB_APP_URL}}]
        ]
  
        ctx.sendMessage('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∏—Ç–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞.', getInlineKeyboard({keyboard}))
      }
      else if (ctx.session?.scenario === SCENARIOS.updateCreditHistory) {
  
        ctx.sendMessage('–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞. –ü—Ä–∏ –µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –±—É–¥–µ—Ç –≤—ã—Å–ª–∞–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –æ—Ç—á–µ—Ç–∞ –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞.')
      }
    }
    else if (command === SCENARIOS.disapprovalOfferConditional) {
      ctx.sendMessage('–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç —É—Å–ª–æ–≤–∏–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.' +
      '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –Ω–µ –º–æ–∂–µ–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤–∞—à—É –ª–∏—á–Ω–æ—Å—Ç—å –∏ –≤—ã–¥–∞—Ç—å –≤–∞–º –∫—Ä–µ–¥–∏—Ç–Ω—ã–π –æ—Ç—á–µ—Ç –±–µ–∑ –ø—Ä–∏–Ω—è—Ç–∏—è —É—Å–ª–æ–≤–∏–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö.')
    }
  }
  else if (command === SCENARIOS.getCreditHistory || command === SCENARIOS.updateCreditHistory) {
    const keyboard = [
      [{ text: '–°–æ–≥–ª–∞—Å–∏–µ', callback_data: SCENARIOS.approvalOfferConditional}, 
      { text: '–û—Ç–∫–∞–∑', callback_data: SCENARIOS.disapprovalOfferConditional}]
    ]

    ctx.reply('–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –∏—Å—Ç–æ—Ä–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–∞—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. ' + 
    '(–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω —Ñ–∞–∏–ª)', getInlineKeyboard({keyboard}))
    
    ctx.session.scenario = command === SCENARIOS.getCreditHistory ? SCENARIOS.getCreditHistory : SCENARIOS.updateCreditHistory
    ctx.session.nextCommand = 'offerGotCreditHistoryWay'
  } else if (command === SCENARIOS.invest) {
    ctx.reply('–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –ø–æ–ª—É—á–∞—Ç—å –∑–∞—è–≤–∫–∏ –¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ–π–¥–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\n–î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /name –ò–≤–∞–Ω\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /surname –ò–≤–∞–Ω–æ–≤\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /phone, –∏ –Ω–∞–∂–º–∏–Ω–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞–∂–º–∏—Ç–µ –∏–ª–∏  –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /send')
    TG.create({ type: SCENARIOS.invest, chatId: ctx.update.callback_query.message.chat.id })
  }
  else if (command === SCENARIOS.broker) {
    ctx.reply('–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –ø–æ–ª—É—á–∞—Ç—å –∑–∞—è–≤–∫–∏ –¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ–π–¥–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\n–î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /name –ò–≤–∞–Ω\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /surname –ò–≤–∞–Ω–æ–≤\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /phone, –∏ –Ω–∞–∂–º–∏–Ω–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞–∂–º–∏—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /send')
    TG.create({ type: SCENARIOS.broker, chatId: ctx.update.callback_query.message.chat.id })
  }
  else if (command === SCENARIOS.zalog) {
    ctx.reply('–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –ø–æ–ª—É—á–∞—Ç—å –∑–∞—è–≤–∫–∏ –¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ–π–¥–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\n–î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /name –ò–≤–∞–Ω\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /surname –ò–≤–∞–Ω–æ–≤\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /phone, –∏ –Ω–∞–∂–º–∏–Ω–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞–∂–º–∏—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /send')
    TG.create({ type: SCENARIOS.zalog, chatId: ctx.update.callback_query.message.chat.id })
  }

  return next();
}

bot.launch()
console.log('Bot started')

InitializeAdminCredentialsAsync()
await SetDefaultPrice("creditHistory", "–ù–ë–ö–ò", 100, true)
await SetDefaultPrice("creditHistory", "–û–ö–ë", 100)
await SetDefaultPrice("creditHistory", "–ë–ö–ò –°–ë", 100)
await SetDefaultPrice("creditHistory", "–°–ö–ë", 100)
await SetDefaultPrice("creditHistory", "–í–ï–ë–ö–ò", 100)
await SetDefaultPrice("creditHistory", "–ú–ë–ö–ò ¬´–ö–†–ï–î–û¬ª", 100)
await SetDefaultPrice("creditHistory", "–ö—Ä–µ–¥–∏—Ç–Ω–æ–µ –ë—é—Ä–æ –†—É—Å—Å–∫–∏–π –°—Ç–∞–Ω–¥–∞—Ä—Ç", 100)

process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))

export default bot
